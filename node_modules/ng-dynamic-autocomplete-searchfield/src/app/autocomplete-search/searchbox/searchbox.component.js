import { Component } from '@angular/core';
import { Input, Output, EventEmitter } from '@angular/core';
var SearchboxComponent = /** @class */ (function () {
    function SearchboxComponent() {
        this.changeEvent = new EventEmitter();
        this.placeholder = 'search';
        this.noRecord = 'no data found';
        this.status = true;
    }
    SearchboxComponent.prototype.ngOnInit = function () {
        if (this.options.searchData.ishighlight) {
            this.highlightColour = 'yellow';
            if (this.options.searchData.highlightColour) {
                this.highlightColour = this.options.searchData.highlightColour;
            }
        }
        var defautSearchBy = [];
        for (var _i = 0, _a = this.options.data; _i < _a.length; _i++) {
            var obj = _a[_i];
            Object.keys(obj).forEach(function (data) {
                if (defautSearchBy.indexOf(data) === -1) {
                    defautSearchBy.push(data);
                }
            });
        }
        this.searchBy = defautSearchBy;
        this.displayBy = defautSearchBy;
        if (this.options.searchData.placeHolder) {
            this.placeholder = this.options.searchData.placeHolder;
        }
        if (this.options.searchData.noRecord) {
            this.noRecord = this.options.searchData.noRecord;
        }
        if (this.options.searchData.searchBy) {
            if (this.options.searchData.searchBy.length > 0) {
                this.searchBy = this.options.searchData.searchBy;
            }
        }
        if (this.options.searchData.displayBy) {
            if (this.options.searchData.displayBy.length > 0) {
                this.displayBy = this.options.searchData.displayBy;
            }
        }
    };
    SearchboxComponent.prototype.searchRowValue = function (value) {
        var selectedValue = [];
        this.options.searchData.displayBy.forEach(function (key) {
            selectedValue.push(value[key]);
        });
        this.status = !this.status;
        this.searchText = selectedValue.join(' ');
        this.changeEvent.emit(value);
    };
    SearchboxComponent.prototype.checkNoRecord = function (data) {
        if (data.length === 0) {
            if (this.status) {
                return true;
            }
        }
        else {
            return false;
        }
    };
    SearchboxComponent.decorators = [
        {
            type: Component, args: [{
                selector: 'ng-dynamic-autocompleteField',
                template: `
                    <div style ='text-align: center;'>
                     <input  type="search" [(ngModel)]='searchText' placeholder="{{this.placeholder}}" ng-model="search">
                     <span ng-if="search.length" class="input-button button button-icon ion-android-close" ng-click="clearSearch()">
                    </span>
                    <table style ='text-align: center;'>
                      <span *ngIf='searchText'>
                        <tr *ngFor='let value of options.data|searchFilter:searchBy:searchText' (click)='searchRowValue(value)'>
                          <td *ngFor='let n of displayBy'>
                    
                            <span [innerHTML]="value[n] | highlight:searchText:highlightColour"></span>
                    
                          </td>
                        </tr>
                        <tr *ngIf="checkNoRecord(options.data|searchFilter:searchBy:searchText)">
                          {{noRecord}}
                        </tr>
                      </span>
                    </table>
                    </div>`,
                styles: [`
                    
                    input {

                  text

                    }
                    table {
                       
                         position:absolute;
                        font-family: arial, sans-serif;
                        border-collapse: collapse;
                        width: 100%;
                    }
                    
                    td {

                        border: 1px solid #dddddd;
                        text-align: left;
                        padding: 8px;
                    }
                    
                    tr {
                        background-color: #dddddd;
                    }`]
            },]
        },
    ];
    /** @nocollapse */
    SearchboxComponent.ctorParameters = function () { return []; };
    SearchboxComponent.propDecorators = {
        options: [{ type: Input }],
        changeEvent: [{ type: Output }]
    };
    return SearchboxComponent;
}());
export { SearchboxComponent };
//# sourceMappingURL=searchbox.component.js.map