import { Directive, Output, EventEmitter, HostListener, ElementRef } from '@angular/core';
var OutsideDirective = /** @class */ (function () {
    function OutsideDirective(elementRef) {
        this.elementRef = elementRef;
        this.flag = false;
        this.closeSection = new EventEmitter();
        this.appOutside = new EventEmitter();
    }
    OutsideDirective.prototype.onDocumentClick = function (event) {
        this.targetElement = event.target;
        this.flag = false;
        if (this.targetElement && !this.elementRef.nativeElement.contains(this.targetElement)) {
            if ((this.flag === false) && (this.targetElement.className === 'buttons')) {
                this.flag = true;
                this.closeSection.emit(this.flag);
                return false;
            }
            else if ((this.flag) && (this.targetElement.className === 'buttons')) {
                this.flag = false;
                this.closeSection.emit(this.flag);
                return false;
            }
            else {
                this.flag = true;
                this.appOutside.emit(this.flag);
            }
        }
    };
    OutsideDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[appOutside]'
                },] },
    ];
    /** @nocollapse */
    OutsideDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    OutsideDirective.propDecorators = {
        closeSection: [{ type: Output }],
        appOutside: [{ type: Output }],
        onDocumentClick: [{ type: HostListener, args: ['document:click', ['$event'],] }]
    };
    return OutsideDirective;
}());
export { OutsideDirective };
//# sourceMappingURL=outside.directive.js.map