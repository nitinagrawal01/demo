{"version":3,"file":"outside.directive.js","sourceRoot":"","sources":["../../../../../src/app/multiSingleDropDown/directive/outside.directive.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,YAAY,EAAE,YAAY,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAE1F;IAQE,0BAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAH1C,SAAI,GAAG,KAAK,CAAC;QACH,iBAAY,GAAG,IAAI,YAAY,EAAO,CAAC;QACvC,eAAU,GAAG,IAAI,YAAY,EAAO,CAAC;IACD,CAAC;IAGxC,0CAAe,GADtB,UACuB,KAAU;QAC/B,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,MAAqB,CAAC;QACjD,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QAClB,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;YACtF,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,KAAK,SAAS,CAAC,CAAC,CAAC,CAAC;gBAC1E,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;gBACjB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAClC,MAAM,CAAC,KAAK,CAAC;YACf,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,KAAK,SAAS,CAAC,CAAC,CAAC,CAAC;gBACvE,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;gBAClB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAClC,MAAM,CAAC,KAAK,CAAC;YACf,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;gBACjB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAClC,CAAC;QACH,CAAC;IACH,CAAC;;gBA5BF,SAAS,SAAC;oBACT,QAAQ,EAAE,cAAc;iBACzB;;;;gBAJuD,UAAU;;;+BAQ/D,MAAM;6BACN,MAAM;kCAGN,YAAY,SAAC,gBAAgB,EAAE,CAAC,QAAQ,CAAC;;IAoB5C,uBAAC;CAAA,AA9BD,IA8BC;SA3BY,gBAAgB","sourcesContent":["import { Directive, Output, EventEmitter, HostListener, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '[appOutside]'\n})\nexport class OutsideDirective {\n  targetElement: any;\n  flag = false;\n  @Output() closeSection = new EventEmitter<any>();\n  @Output() appOutside = new EventEmitter<any>();\n  constructor(private elementRef: ElementRef) { }\n\n  @HostListener('document:click', ['$event'])\n  public onDocumentClick(event: any): any {\n    this.targetElement = event.target as HTMLElement;\n    this.flag = false;\n    if (this.targetElement && !this.elementRef.nativeElement.contains(this.targetElement)) {\n      if ((this.flag === false) && (this.targetElement.className === 'buttons')) {\n        this.flag = true;\n        this.closeSection.emit(this.flag);\n        return false;\n      } else if ((this.flag) && (this.targetElement.className === 'buttons')) {\n        this.flag = false;\n        this.closeSection.emit(this.flag);\n        return false;\n      } else {\n        this.flag = true;\n        this.appOutside.emit(this.flag);\n      }\n    }\n  }\n\n}\n\n"]}