{"version":3,"file":"paging.service.js","sourceRoot":"","sources":["../../../../src/app/dynamicTable/paging.service.ts"],"names":[],"mappings":"AACA;IAAA;IA+CA,CAAC;IA7CU,+BAAQ,GAAf,UAAgB,UAAkB,EAAE,WAAuB,EAAE,QAAa;QAAtC,4BAAA,EAAA,eAAuB;QAEvD,IAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,CAAC;QACpD,IAAI,SAAiB,EACjB,OAAe,CAAC;QACpB,EAAE,CAAC,CAAC,UAAU,IAAI,CAAC,CAAC,CAAC,CAAC;YAClB,SAAS,GAAG,CAAC,CAAC;YACd,OAAO,GAAG,UAAU,CAAC;QACzB,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,EAAE,CAAC,CAAC,WAAW,IAAI,CAAC,CAAC,CAAC,CAAC;gBACnB,SAAS,GAAG,CAAC,CAAC;gBACd,OAAO,GAAG,CAAC,CAAC;YAChB,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,WAAW,GAAG,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC;gBACvC,SAAS,GAAG,UAAU,GAAG,CAAC,CAAC;gBAC3B,OAAO,GAAG,UAAU,CAAC;YACzB,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,SAAS,GAAG,WAAW,GAAG,CAAC,CAAC;gBAC5B,OAAO,GAAG,WAAW,GAAG,CAAC,CAAC;YAC9B,CAAC;QACL,CAAC;QACD,IAAM,UAAU,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC;QAEhD,IAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,GAAG,QAAQ,GAAG,CAAC,EAAE,UAAU,GAAG,CAAC,CAAC,CAAC;QACrE,IAAM,CAAC,GAAG,SAAS,CAAC;QACpB,IAAM,KAAK,GAAa,EAAE,CAAC;QAC3B,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACd,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;YACzB,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC;gBAC3C,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;YAChD,CAAC;QAEL,CAAC;QAED,MAAM,CAAC;YACH,UAAU,EAAE,UAAU;YACtB,WAAW,EAAE,WAAW;YACxB,QAAQ,EAAE,QAAQ;YAClB,UAAU,EAAE,UAAU;YACtB,SAAS,EAAE,SAAS;YACpB,OAAO,EAAE,OAAO;YAChB,UAAU,EAAE,UAAU;YACtB,QAAQ,EAAE,QAAQ;YAClB,KAAK,EAAE,KAAK;SACf,CAAC;IACN,CAAC;IACL,mBAAC;AAAD,CAAC,AA/CD,IA+CC","sourcesContent":["\r\nexport class PagerService {\r\n\r\n    public getPager(totalItems: number, currentPage: number = 1, pageSize: any): object {\r\n\r\n        const totalPages = Math.ceil(totalItems / pageSize);\r\n        let startPage: number,\r\n            endPage: number;\r\n        if (totalPages <= 5) {\r\n            startPage = 1;\r\n            endPage = totalPages;\r\n        } else {\r\n            if (currentPage <= 3) {\r\n                startPage = 1;\r\n                endPage = 5;\r\n            } else if (currentPage + 1 >= totalPages) {\r\n                startPage = totalPages - 4;\r\n                endPage = totalPages;\r\n            } else {\r\n                startPage = currentPage - 2;\r\n                endPage = currentPage + 2;\r\n            }\r\n        }\r\n        const startIndex = (currentPage - 1) * pageSize;\r\n\r\n        const endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\r\n        const p = startPage;\r\n        const pages: number[] = [];\r\n        pages.push(p);\r\n        for (let i = 0; i < 4; i++) {\r\n            if (Math.max.apply(null, pages) < totalPages) {\r\n                pages.push(Math.max.apply(null, pages) + 1);\r\n            }\r\n\r\n        }\r\n\r\n        return {\r\n            totalItems: totalItems,\r\n            currentPage: currentPage,\r\n            pageSize: pageSize,\r\n            totalPages: totalPages,\r\n            startPage: startPage,\r\n            endPage: endPage,\r\n            startIndex: startIndex,\r\n            endIndex: endIndex,\r\n            pages: pages\r\n        };\r\n    }\r\n}\r\n"]}